- type: replace
  path: /releases/-
  value:
    name: cron
    version: latest


- type: replace
  path: /instance_groups/name=bosh/jobs/-
  value:
    name: cron
    release: cron
    properties:
      cron:
        variables:
          TOOLING_BOSH: ((terraform_outputs.tooling_bosh_static_ip))
          AWS_DEFAULT_REGION: ((terraform_outputs.vpc_region))
          PGHOST: ((terraform_outputs.bosh_rds_host_curr))
          PGUSERNAME: ((terraform_outputs.bosh_rds_username))
          PGPASSWORD: ((terraform_outputs.bosh_rds_password))
          PGDBNAME: bosh
          VPC_NAME: ((terraform_outputs.stack_description))
          BOSH_DIRECTOR: ((terraform_outputs.bosh_static_ip))
          GATEWAY_HOST: ((gateway_host))
          GATEWAY_DEPLOYMENT: ((gateway_deployment))
          INSTANCE_WHITELIST: ((terraform_outputs.master_bosh_static_ip)) ((terraform_outputs.bosh_static_ip))
        entries:
        - minute: '*'
          hour: '*'
          day: '*'
          month: '*'
          wday: '*'
          user: root
          script:
            name: unknown-vms.sh
            contents: |-
              #!/bin/bash

              set -exu

              export PGPASSWORD=${PGPASSWORD}

              # apps from other packages on this host we need
              PSQL=/var/vcap/packages/postgres-client/bin/psql

              AWSCLI=/var/vcap/data/aws-cli-v2/v2/current/bin/aws

              # Hack: look up push gateway address in database if gateway is managed by the current director
              if [ -n "${GATEWAY_DEPLOYMENT}" ]; then
                GATEWAY_HOST=$($PSQL -h ${PGHOST} -U ${PGUSERNAME} -d ${PGDBNAME} -tA -c \
                  "select ip from local_dns_records where deployment = '${GATEWAY_DEPLOYMENT}' and instance_group = 'prometheus' limit 1")
              fi

              # build JMESpath filter to exclude a list of instances based on their PrivateIpAddress
              query_filter() {
                  local IFS
                  unset IFS
                  local FILTER=""

                  for ip in ${1}; do
                      if [ -z "$FILTER" ]; then
                          FILTER="?PrivateIpAddress != "
                      else
                          FILTER="${FILTER} && PrivateIpAddress != "
                      fi
                      FILTER="${FILTER}\`$ip\`"
                  done

                  echo ${FILTER}
              }


              # find the AWS VPC ID we want to enumerate
              VPC_ID=$(${AWSCLI} ec2 describe-vpcs --filter Name=tag:Name,Values=${VPC_NAME} --output text --query 'Vpcs[].VpcId')

              IFS=$'\n'
              VMS=$(
                      ${AWSCLI} ec2 describe-instances --max-items 1000 --output text  --filter Name=vpc-id,Values=${VPC_ID} --query "
                          Reservations[].Instances[$(query_filter "${BOSH_DIRECTOR} ${INSTANCE_WHITELIST}")]
                          | [].{\"iaas_id\": InstanceId, \"bosh_id\": Tags[?Key==\`id\`].Value | [0]}
                          | [].[iaas_id, bosh_id]"
                          )
              metrics=$(mktemp metrics-XXXX.prom)
              #
              # get a list of all the instances bosh has created
              KNOWN_INSTANCES=$($PSQL -h ${PGHOST} -U ${PGUSERNAME} -d ${PGDBNAME} -t -c "select uuid from instances")

              # emit a metric for all instances in that VPC
              for vminfo in ${VMS}
                  do

                  iaas_id=$(echo ${vminfo} | cut -f1)
                  bosh_id=$(echo ${vminfo} | cut -f2)

                  # check to see if bosh director knows about this instance pulled from the iaas
                  unknown_instance=0
                  if [[ $KNOWN_INSTANCES != *${bosh_id}* ]]; then
                      unknown_instance=1
                  fi

                  cat <<PUSH >> "${metrics}"
                  bosh_unknown_iaas_instance {iaas_id="${iaas_id}",bosh_id="${bosh_id}"} ${unknown_instance}
              PUSH

              done

              curl -X PUT --data-binary "@${metrics}" "${GATEWAY_HOST}:${GATEWAY_PORT:-9091}/metrics/job/bosh_unknown_instance/vpc_name/${VPC_NAME}"
              rm "${metrics}"
